{"version":3,"sources":["STTable.tsx","index.tsx"],"names":["STTable","render","data","props","args","columns","actions","row_key","tags_columns","that","concat","title","key","fixed","width","action_width","text","record","size","map","action","i","href","onClick","handleAction","bind","column","includes","tags","index","split","tag","color","onChange","handleReAction","rowKey","dataSource","scroll","x","sticky","this","e","stopPropagation","setState","action_records","action_id","uuidv4","Streamlit","setComponentValue","state","pagination","filters","sorter","extra","setFrameHeight","setTimeout","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"kQAwBMA,E,4MAsCGC,OAAS,WACd,IAAMC,EAAO,EAAKC,MAAMC,KAAKF,KACzBG,EAAiC,EAAKF,MAAMC,KAAKC,QACrD,EAAyC,EAAKF,MAAMC,KAA7CE,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,aACnBC,EAAI,eAkCV,OAjCIH,IACFD,EAAUA,EAAQK,OAChB,CACEC,MAAO,SACPC,IAAK,YACLC,MAAO,QACPC,MAAO,EAAKX,MAAMC,KAAKW,aACvBd,OAAQ,SAACe,EAAMC,GAAP,OACN,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACGZ,EAAQa,KAAI,SAASC,EAAgBC,GACpC,IAAMT,EAAMK,EAAOV,GACnB,OAAO,mBAAGe,KAAK,IAAuBC,QAASd,EAAKe,aAAaJ,EAAQH,GAAQQ,KAAKhB,GAA/E,SAAuFW,GAAtER,EAAMQ,YAOtCZ,GACFH,EAAQc,KAAI,SAACO,GACPlB,EAA0BmB,SAAUD,EAAOd,OAC7Cc,EAAOzB,OAAS,SAAC2B,EAAcX,EAAaY,GAC1C,OAAO,mCACJD,EAAKE,MAAM,KAAKX,KAAI,SAAAY,GAAG,OACtB,cAAC,IAAD,CAAKC,MAAM,OAAX,SACGD,GADoB,QAAUA,EAAM,IAAMF,aAUtD,cAAC,IAAD,CACGI,SAAU,EAAKC,eAAeT,KAApB,gBACVU,OAAQ5B,EACRF,QAASA,EACT+B,WAAYlC,EACZmC,OAAQ,CAAEC,EAAG,MACbC,QAAM,K,kDAjFd,SAAqBnB,EAAgBH,GACnC,IAAMR,EAAO+B,KACb,OAAO,SAASC,GACdA,EAAEC,kBACFjC,EAAKkC,SAAS,CACVvB,OAAQA,EACRwB,eAAgB,CAAC3B,GACjB4B,UAAWC,gBAEb,kBAAMC,IAAUC,kBAAkBvC,EAAKwC,a,4BAK7C,SAAuBC,EAAiBC,EAAcC,EAAaC,GAAgB,IAAD,OAChFN,IAAUO,eAAe,KACzBC,WAAWR,IAAUO,eAAgB,GACrCd,KAAKG,SAAS,CACVO,aACAC,UACAC,SACAhC,OAAQiC,EAAMjC,OACdyB,UAAWC,gBAEb,kBAAMC,IAAUC,kBAAkB,EAAKC,Y,+BAI3C,WACEM,WAAWR,IAAUO,eAAgB,K,gCAGvC,WACEC,WAAWR,IAAUO,eAAgB,O,GAnCnBE,KAyFPC,cAAwBzD,G,OC5GvC0D,IAASzD,OACP,cAAC,IAAM0D,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3c469f20.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport { Table, Tag, Space} from 'antd';\nimport { ColumnProps, ColumnsType, ColumnType } from \"antd/lib/table\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\ninterface IExtra {\n  action: string\n}\n\ninterface State {\n  pagination: any\n  filters: any \n  sorter: any \n  action: string \n  action_records: any[]\n  action_id: string\n}\n\nclass STTable extends StreamlitComponentBase<State> {\n\n  private handleAction(action: string, record: object) {\n    const that = this;\n    return function(e:  React.MouseEvent<HTMLElement>) {\n      e.stopPropagation();\n      that.setState({ \n          action: action, \n          action_records: [record],\n          action_id: uuidv4(),\n        },\n        () => Streamlit.setComponentValue(that.state)\n      )\n    }\n  }\n\n  private handleReAction(pagination: any, filters: any, sorter: any, extra: IExtra) {\n    Streamlit.setFrameHeight(100);\n    setTimeout(Streamlit.setFrameHeight, 1);\n    this.setState({ \n        pagination,\n        filters,\n        sorter,\n        action: extra.action,\n        action_id: uuidv4(),\n      },\n      () => Streamlit.setComponentValue(this.state)\n    )\n  }\n\n  componentDidMount() {\n    setTimeout(Streamlit.setFrameHeight, 1);\n  }\n\n  componentDidUpdate() {\n    setTimeout(Streamlit.setFrameHeight, 1);\n  }\n\n  public render = (): ReactNode => {\n    const data = this.props.args.data;\n    let columns : ColumnType<object>[] = this.props.args.columns;\n    const {actions, row_key, tags_columns} = this.props.args;\n    const that = this;\n    if (actions) {\n      columns = columns.concat(\n        {\n          title: 'Action',\n          key: 'operation',\n          fixed: 'right', \n          width: this.props.args.action_width,\n          render: (text, record: any) => (\n            <Space size=\"middle\">\n              {actions.map(function(action: string, i: Number){\n                const key = record[row_key];\n                return <a href=\"#\" key={key + action} onClick={that.handleAction(action, record).bind(that)}>{action}</a>\n              })}\n            </Space>\n          )\n        }\n      );\n    }\n    if (tags_columns) {\n      columns.map((column: ColumnType<object>) => {\n        if((tags_columns as string[]).includes((column.key as string))){\n          column.render = (tags: string, record: any, index: Number ) => {\n            return <>\n              {tags.split(',').map(tag => (\n                <Tag color=\"blue\" key={'tags/' + tag + '/' + index}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          }\n        }\n      })\n    }\n    return (\n       <Table\n          onChange={this.handleReAction.bind(this)}\n          rowKey={row_key}\n          columns={columns}\n          dataSource={data}\n          scroll={{ x: 1500 }}\n          sticky\n        />\n    )\n  }\n}\n\nexport default withStreamlitConnection(STTable);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport STTable from \"./STTable\"\nimport 'antd/dist/antd.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <STTable />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}